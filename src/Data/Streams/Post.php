<?php

namespace CodebarAg\LaravelBeekeeper\Data\Streams;

use Carbon\CarbonImmutable;
use CodebarAg\LaravelBeekeeper\Data\Files\File;
use Illuminate\Support\Arr;
use Illuminate\Support\Collection;

final class Post
{
    public static function make(array $data): self
    {
        return new self(
            id: Arr::get($data, 'id'),
            text: Arr::get($data, 'text'),
            title: Arr::get($data, 'title'),
            labels: collect(Arr::get($data, 'labels', [])),
            sticky: Arr::get($data, 'sticky', false),
            likeCount: Arr::get($data, 'like_count', 0),
            streamId: Arr::get($data, 'streamid'),
            digest: Arr::get($data, 'digest'),
            userId: Arr::get($data, 'user_id'),
            uuid: Arr::get($data, 'uuid'),
            commentCount: Arr::get($data, 'comment_count', 0),
            reportCount: Arr::get($data, 'report_count', 0),
            source: Arr::get($data, 'source'),
            voteCount: Arr::get($data, 'vote_count', 0),
            moderated: Arr::get($data, 'moderated', false),
            photo: Arr::get($data, 'photo'),
            languageConfidence: Arr::get($data, 'language_confidence'),
            type: Arr::get($data, 'type'),
            metadata: Arr::get($data, 'metadata'),
            profile: Arr::get($data, 'profile'),
            edited: Arr::get($data, 'edited', false),
            displayNameExtension: Arr::get($data, 'display_name_extension'),
            subscribedByUser: Arr::get($data, 'subscribed_by_user', false),
            reportable: Arr::get($data, 'reportable', false),
            anonymous: Arr::get($data, 'anonymous', false),
            displayName: Arr::get($data, 'display_name'),
            unread: Arr::get($data, 'unread', false),
            locked: Arr::get($data, 'locked', false),
            reactionsDisabled: Arr::get($data, 'reactions_disabled', false),
            name: Arr::get($data, 'name'),
            language: Arr::get($data, 'language'),
            languageInformation: Arr::get($data, 'language_information'),
            created: Arr::has($data, 'created') ? CarbonImmutable::parse(Arr::get($data, 'created')) : null,
            postedByUser: Arr::get($data, 'posted_by_user', false),
            avatar: Arr::get($data, 'avatar'),
            reportedByUser: Arr::get($data, 'reported_by_user', false),
            likedByUser: Arr::get($data, 'liked_by_user', false),
            mentions: collect(Arr::get($data, 'mentions', [])),
            mentionsDetails: Arr::get($data, 'mentions_details'),
            scheduledAt: Arr::has($data, 'scheduled_at') ? CarbonImmutable::parse(Arr::get($data, 'scheduled_at')) : null,
            status: Arr::get($data, 'status'),
            files: collect(Arr::get($data, 'files', []))->map(fn (array $file) => File::make($file)),
            photos: collect(Arr::get($data, 'photos', []))->map(fn (array $photo) => File::make($photo)),
            videos: collect(Arr::get($data, 'videos', []))->map(fn (array $video) => File::make($video)),
            media: collect(Arr::get($data, 'media', []))->map(fn (array $media) => File::make($media)),
            options: collect(Arr::get($data, 'options', [])),
            stateId: Arr::get($data, 'state_id'),
        );
    }

    public function __construct(
        public int $id,
        public string $text,
        public ?string $title,
        public Collection $labels,
        public bool $sticky,
        public int $likeCount,
        public int $streamId,
        public int $digest,
        public string $userId,
        public string $uuid,
        public int $commentCount,
        public int $reportCount,
        public string $source,
        public int $voteCount,
        public bool $moderated,
        public ?string $photo,
        public ?float $languageConfidence,
        public string $type,
        public ?string $metadata,
        public ?string $profile,
        public bool $edited,
        public ?string $displayNameExtension,
        public bool $subscribedByUser,
        public bool $reportable,
        public bool $anonymous,
        public ?string $displayName,
        public bool $unread,
        public bool $locked,
        public bool $reactionsDisabled,
        public ?string $name,
        public ?string $language,
        public ?array $languageInformation,
        public ?CarbonImmutable $created,
        public bool $postedByUser,
        public ?string $avatar,
        public bool $reportedByUser,
        public bool $likedByUser,
        public Collection $mentions,
        public ?array $mentionsDetails,
        public ?CarbonImmutable $scheduledAt,
        public ?string $status,
        public Collection $files,
        public Collection $photos,
        public Collection $videos,
        public Collection $media,
        public Collection $options,
        public ?string $stateId,
    ) {}
}
